mixin votes-chart(options)
  - const b = 'votes-chart'

  -
    const {
      id,
      votes = [
        {
          label: 'perfect',
          count: 520
        },
        {
          label: 'good',
          count: 261
        },
        {
          label: 'satisfactorily',
          count: 260
        },
      ],
      colors = {
        perfect: '#FFE39C',
        good: '#6FCF97',
        satisfactorily: '#BC9CFF',
        bad: '#919191',
      },
      voteLabels = {
        perfect: 'Великолепно',
        good: 'Хорошо',
        satisfactorily: 'Удовлетворительно',
        bad: 'Разочарован',
      }
    } = options || {}

  - const width = 122
  - const height = 122
  - const cx = width / 2
  - const cy = width / 2
  - const radius = 55
  - const strokeWidth = 4
  - const circumreference = 2 * Math.PI * radius

  - const sortedValues = votes.sort((a, b) => (b.count - a.count))
  - const total = sortedValues.reduce((acc, { count }) => acc + count, 0)

  - let angleOffset = 90
  figure(class=[b, 'clearfix'])
    svg(class=`${b}__chart` height=height width=width viewBox=[0, 0, width, height].join(' '))
      each item in sortedValues
        - const key = item.label
        - const strokeDashOffset = circumreference - (item.count / total) * circumreference
        - const circleTransformValue = `rotate(${angleOffset}, ${cx}, ${cy})`
        - angleOffset = (item.count / total) * 360 + angleOffset
        g
          circle(
            class=[`${b}__circle`, `${b}__circle--${key}`]
            cx=cx
            cy=cy
            r=radius
            fill='transparent'
            stroke=colors[key]
            stroke-width=strokeWidth
            stroke-dasharray=circumreference - 2
            stroke-dashoffset=strokeDashOffset
            transform=circleTransformValue
          )
      g(class=`${b}__count`)
        text(
          class=`${b}__count-value`
          x='50%'
          y='50%'
          text-anchor='middle'
        )= total
        text(
          class=`${b}__count-unit`
          x='50%'
          y='65%'
          text-anchor='middle'
        )= 'голосов'

    ul(class=`${b}__labels`)
      each label, key in voteLabels
        - const countSourceItem = sortedValues.find(obj => obj.label === key)
        - const count = countSourceItem !== undefined ? countSourceItem.count : '0';
        li(
          class=[`${b}__label`, `${b}__label--${key}`]
          data-vote-key=key
          data-count=count
        )= label